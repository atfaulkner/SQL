/* For this project I downloaded Spotify data from Kaggle.
Then I created a table to upload the Spotify data into.
Finally I performed analytics on the data using SQL. */

/* Create the Spotifydata table. */
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

/* Then I inserted the Spotify data from the .csv into the table.

/* Next I explored the data using the following SQL. */

SELECT * FROM spotifydata;

/* First I determined the average popularity, danceability, and energy by artist and sorted the data by artist. */
SELECT artist_name, avg(popularity), avg(danceability), avg(energy)
FROM spotifydata
GROUP by artist_name
ORDER by artist_name;

/* Then I determined who the top 10 artists are based on popularity. */
SELECT artist_name, track_name, popularity
FROM spotifydata
ORDER BY popularity DESC
LIMIT 10;

/* I also found out which artist released the longest song. */
SELECT artist_name, track_name, duration_ms
FROM spotifydata
ORDER BY duration_ms DESC
LIMIT 1;

/* I looked up the average danceability for the 10 most popular songs. */
SELECT avg(danceability) 
FROM 
(SELECT popularity, danceability 
FROM spotifydata
ORDER BY popularity DESC
LIMIT 10);
